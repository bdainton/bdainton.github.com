import{S as Oe,i as ze,s as Re,k as s,v as d,a as r,q as l,l as h,m as p,w as f,c as o,r as c,h as i,n as We,b as Se,x as g,F as n,A as He,f as m,t as w,y as u}from"../../../../../chunks/index-ef4f97a1.js";import{M as Ae,P as Ue}from"../../../../../chunks/PlaybookNavigator-0d1ce00c.js";import{H as $}from"../../../../../chunks/Heading-e303b286.js";import"../../../../../chunks/stores-539ba802.js";/* empty css                                                                  */function Ve(Me){let e,b,C,k,N,y,G,S,J,K,Q,A,Y,Z,M,L,X,v,ee,O,te,ne,I,ae,z,re,oe,x,ie,R,se,le,_,he,W,pe,ce,E,de,H,fe,ge,P,me,T,we,U,ue,$e,D,be,V,ke,j,F,q;return b=new $({props:{id:"stack",level:1,text:"Tech Stack"}}),k=new Ae({props:{video:!0,vertical:!0,src:"https://www.youtube.com/embed/jRPH2yWSbDw"}}),v=new $({props:{id:"technical-fit",level:2,text:"Technical Fit"}}),I=new $({props:{id:"supportability-fit",level:2,text:"Supportability Fit"}}),x=new $({props:{id:"talent-fit",level:2,text:"Talent Fit"}}),_=new $({props:{id:"options",level:2,text:"Still Got Options?"}}),E=new $({props:{id:"option-known",level:3,text:"Known Quantity"}}),P=new $({props:{id:"option-backwards",level:3,text:"Work Backwards"}}),T=new Ae({props:{video:!0,src:"https://www.youtube.com/embed/0CjUZTzEJ0Y"}}),D=new $({props:{id:"option-flexibility",level:3,text:"Maximize Future Flexibility"}}),F=new Ue({props:{backTitle:"Tools",backPath:"/companion/playbook/tools",forwardTitle:"Roadmapping",forwardPath:"/companion/playbook/roadmapping"}}),{c(){e=s("div"),d(b.$$.fragment),C=r(),d(k.$$.fragment),N=r(),y=s("p"),G=l("Don't worry, I "),S=s("b"),J=l("will not propose a specific tech stack"),K=l(`. I'm aware that doing so would
    unleash a legion of tech framework zealots.`),Q=r(),A=s("p"),Y=l("Until I know what we need to build, all plausible tech options are on the table."),Z=r(),M=s("p"),L=l("HOWEVER, I definitely follow some strong guidelines when making tech selections."),X=r(),d(v.$$.fragment),ee=r(),O=s("p"),te=l(`If the tech does the job for the product we\u2019re trying to build, then it\u2019s a candidate for our
    stack.`),ne=r(),d(I.$$.fragment),ae=r(),z=s("p"),re=l(`Bleeding-edge tech can wow users but also might be buggy. Older tech might be bulletproof but
    sprawling and slow. I consider this spectrum heavily when choosing the pieces of our tech stack.`),oe=r(),d(x.$$.fragment),ie=r(),R=s("p"),se=l(`Do existing devs on the team know how to work with the tech you\u2019re considering? Undoubtedly,
    devs can move faster when they already have experience working with a specific language or
    framework. Do PROSPECTIVE devs WANT to work with it (making it a draw when recruiting
    engineers)?`),le=r(),d(_.$$.fragment),he=r(),W=s("p"),pe=l(`If I still have a lot of plausible tech stack choices after considering the above factors, I
    consider a few more things:`),ce=r(),d(E.$$.fragment),de=r(),H=s("p"),fe=l(`A good friend of mine frequently says, \u201Cthe best tech is the tech you already know\u201D. Especially
    in the early days when we\u2019re trying to crank out product experiments to find PMF, there\u2019s value
    in leaning on a well-known stack.`),ge=r(),d(P.$$.fragment),me=r(),d(T.$$.fragment),we=r(),U=s("p"),ue=l(`As I will share countless times in this playbook, I like to work backwards by envisioning the
    end state \u2014 the desired final experience \u2014 and then taking only the steps necessary to get
    there. Many tech stacks are general purpose web frameworks; if there\u2019s one that is better-suited
    (faster, easier) for the end experience we\u2019re targeting, then that\u2019s a better candidate.`),$e=r(),d(D.$$.fragment),be=r(),V=s("p"),ke=l(`I don\u2019t want to paint the team into a technical corner. If there are multiple viable options,
    I\u2019d prefer to pick one that maximizes the product directions we can consider.`),j=r(),d(F.$$.fragment),this.h()},l(a){e=h(a,"DIV",{class:!0});var t=p(e);f(b.$$.fragment,t),C=o(t),f(k.$$.fragment,t),N=o(t),y=h(t,"P",{});var B=p(y);G=c(B,"Don't worry, I "),S=h(B,"B",{});var ye=p(S);J=c(ye,"will not propose a specific tech stack"),ye.forEach(i),K=c(B,`. I'm aware that doing so would
    unleash a legion of tech framework zealots.`),B.forEach(i),Q=o(t),A=h(t,"P",{});var ve=p(A);Y=c(ve,"Until I know what we need to build, all plausible tech options are on the table."),ve.forEach(i),Z=o(t),M=h(t,"P",{});var Ie=p(M);L=c(Ie,"HOWEVER, I definitely follow some strong guidelines when making tech selections."),Ie.forEach(i),X=o(t),f(v.$$.fragment,t),ee=o(t),O=h(t,"P",{});var xe=p(O);te=c(xe,`If the tech does the job for the product we\u2019re trying to build, then it\u2019s a candidate for our
    stack.`),xe.forEach(i),ne=o(t),f(I.$$.fragment,t),ae=o(t),z=h(t,"P",{});var _e=p(z);re=c(_e,`Bleeding-edge tech can wow users but also might be buggy. Older tech might be bulletproof but
    sprawling and slow. I consider this spectrum heavily when choosing the pieces of our tech stack.`),_e.forEach(i),oe=o(t),f(x.$$.fragment,t),ie=o(t),R=h(t,"P",{});var Ee=p(R);se=c(Ee,`Do existing devs on the team know how to work with the tech you\u2019re considering? Undoubtedly,
    devs can move faster when they already have experience working with a specific language or
    framework. Do PROSPECTIVE devs WANT to work with it (making it a draw when recruiting
    engineers)?`),Ee.forEach(i),le=o(t),f(_.$$.fragment,t),he=o(t),W=h(t,"P",{});var Pe=p(W);pe=c(Pe,`If I still have a lot of plausible tech stack choices after considering the above factors, I
    consider a few more things:`),Pe.forEach(i),ce=o(t),f(E.$$.fragment,t),de=o(t),H=h(t,"P",{});var Te=p(H);fe=c(Te,`A good friend of mine frequently says, \u201Cthe best tech is the tech you already know\u201D. Especially
    in the early days when we\u2019re trying to crank out product experiments to find PMF, there\u2019s value
    in leaning on a well-known stack.`),Te.forEach(i),ge=o(t),f(P.$$.fragment,t),me=o(t),f(T.$$.fragment,t),we=o(t),U=h(t,"P",{});var De=p(U);ue=c(De,`As I will share countless times in this playbook, I like to work backwards by envisioning the
    end state \u2014 the desired final experience \u2014 and then taking only the steps necessary to get
    there. Many tech stacks are general purpose web frameworks; if there\u2019s one that is better-suited
    (faster, easier) for the end experience we\u2019re targeting, then that\u2019s a better candidate.`),De.forEach(i),$e=o(t),f(D.$$.fragment,t),be=o(t),V=h(t,"P",{});var Fe=p(V);ke=c(Fe,`I don\u2019t want to paint the team into a technical corner. If there are multiple viable options,
    I\u2019d prefer to pick one that maximizes the product directions we can consider.`),Fe.forEach(i),t.forEach(i),j=o(a),f(F.$$.fragment,a),this.h()},h(){We(e,"class","text-lg")},m(a,t){Se(a,e,t),g(b,e,null),n(e,C),g(k,e,null),n(e,N),n(e,y),n(y,G),n(y,S),n(S,J),n(y,K),n(e,Q),n(e,A),n(A,Y),n(e,Z),n(e,M),n(M,L),n(e,X),g(v,e,null),n(e,ee),n(e,O),n(O,te),n(e,ne),g(I,e,null),n(e,ae),n(e,z),n(z,re),n(e,oe),g(x,e,null),n(e,ie),n(e,R),n(R,se),n(e,le),g(_,e,null),n(e,he),n(e,W),n(W,pe),n(e,ce),g(E,e,null),n(e,de),n(e,H),n(H,fe),n(e,ge),g(P,e,null),n(e,me),g(T,e,null),n(e,we),n(e,U),n(U,ue),n(e,$e),g(D,e,null),n(e,be),n(e,V),n(V,ke),Se(a,j,t),g(F,a,t),q=!0},p:He,i(a){q||(m(b.$$.fragment,a),m(k.$$.fragment,a),m(v.$$.fragment,a),m(I.$$.fragment,a),m(x.$$.fragment,a),m(_.$$.fragment,a),m(E.$$.fragment,a),m(P.$$.fragment,a),m(T.$$.fragment,a),m(D.$$.fragment,a),m(F.$$.fragment,a),q=!0)},o(a){w(b.$$.fragment,a),w(k.$$.fragment,a),w(v.$$.fragment,a),w(I.$$.fragment,a),w(x.$$.fragment,a),w(_.$$.fragment,a),w(E.$$.fragment,a),w(P.$$.fragment,a),w(T.$$.fragment,a),w(D.$$.fragment,a),w(F.$$.fragment,a),q=!1},d(a){a&&i(e),u(b),u(k),u(v),u(I),u(x),u(_),u(E),u(P),u(T),u(D),a&&i(j),u(F,a)}}}class Ge extends Oe{constructor(e){super(),ze(this,e,null,Ve,Re,{})}}export{Ge as default};
